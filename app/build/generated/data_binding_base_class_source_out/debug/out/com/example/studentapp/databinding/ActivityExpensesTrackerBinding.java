// Generated by view binder compiler. Do not edit!
package com.example.studentapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studentapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExpensesTrackerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btAddExpenses;

  @NonNull
  public final FloatingActionButton btnSwitchToSavingsTracker;

  @NonNull
  public final EditText etExpensesAmount;

  @NonNull
  public final EditText etExpensesDate;

  @NonNull
  public final ListView lvExpenses;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ToggleButton tbSortExpensesAmount;

  @NonNull
  public final ToggleButton tbSortExpensesDate;

  @NonNull
  public final TextView tvExpensesLabel;

  @NonNull
  public final TextView tvTotalExpenses;

  private ActivityExpensesTrackerBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btAddExpenses, @NonNull FloatingActionButton btnSwitchToSavingsTracker,
      @NonNull EditText etExpensesAmount, @NonNull EditText etExpensesDate,
      @NonNull ListView lvExpenses, @NonNull ConstraintLayout main,
      @NonNull ToggleButton tbSortExpensesAmount, @NonNull ToggleButton tbSortExpensesDate,
      @NonNull TextView tvExpensesLabel, @NonNull TextView tvTotalExpenses) {
    this.rootView = rootView;
    this.btAddExpenses = btAddExpenses;
    this.btnSwitchToSavingsTracker = btnSwitchToSavingsTracker;
    this.etExpensesAmount = etExpensesAmount;
    this.etExpensesDate = etExpensesDate;
    this.lvExpenses = lvExpenses;
    this.main = main;
    this.tbSortExpensesAmount = tbSortExpensesAmount;
    this.tbSortExpensesDate = tbSortExpensesDate;
    this.tvExpensesLabel = tvExpensesLabel;
    this.tvTotalExpenses = tvTotalExpenses;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExpensesTrackerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExpensesTrackerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_expenses_tracker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExpensesTrackerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_addExpenses;
      Button btAddExpenses = ViewBindings.findChildViewById(rootView, id);
      if (btAddExpenses == null) {
        break missingId;
      }

      id = R.id.btn_switchToSavingsTracker;
      FloatingActionButton btnSwitchToSavingsTracker = ViewBindings.findChildViewById(rootView, id);
      if (btnSwitchToSavingsTracker == null) {
        break missingId;
      }

      id = R.id.et_expensesAmount;
      EditText etExpensesAmount = ViewBindings.findChildViewById(rootView, id);
      if (etExpensesAmount == null) {
        break missingId;
      }

      id = R.id.et_expensesDate;
      EditText etExpensesDate = ViewBindings.findChildViewById(rootView, id);
      if (etExpensesDate == null) {
        break missingId;
      }

      id = R.id.lv_expenses;
      ListView lvExpenses = ViewBindings.findChildViewById(rootView, id);
      if (lvExpenses == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tb_sortExpensesAmount;
      ToggleButton tbSortExpensesAmount = ViewBindings.findChildViewById(rootView, id);
      if (tbSortExpensesAmount == null) {
        break missingId;
      }

      id = R.id.tb_sortExpensesDate;
      ToggleButton tbSortExpensesDate = ViewBindings.findChildViewById(rootView, id);
      if (tbSortExpensesDate == null) {
        break missingId;
      }

      id = R.id.tv_expensesLabel;
      TextView tvExpensesLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvExpensesLabel == null) {
        break missingId;
      }

      id = R.id.tv_totalExpenses;
      TextView tvTotalExpenses = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalExpenses == null) {
        break missingId;
      }

      return new ActivityExpensesTrackerBinding((ConstraintLayout) rootView, btAddExpenses,
          btnSwitchToSavingsTracker, etExpensesAmount, etExpensesDate, lvExpenses, main,
          tbSortExpensesAmount, tbSortExpensesDate, tvExpensesLabel, tvTotalExpenses);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
